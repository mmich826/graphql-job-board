{"version":3,"sources":["auth.js","fake-data.js","CompanyDetail.js","LoginForm.js","JobList.js","requests.js","JobBoard.js","JobDetail.js","JobForm.js","NavBar.js","App.js","index.js"],"names":["accessTokenKey","_callee","email","password","response","_ref","token","regenerator_default","a","wrap","_context","prev","next","fetch","method","headers","content-type","body","JSON","stringify","sent","ok","json","localStorage","setItem","abrupt","stop","companies","id","name","description","jobs","title","company","CompanyDetail","_Component","props","_this","Object","classCallCheck","this","companyId","possibleConstructorReturn","getPrototypeOf","call","match","params","state","find","inherits","createClass","key","value","react_default","createElement","className","Component","LoginForm","error","event","_event$target","target","setState","defineProperty","_this2","preventDefault","_this$state","_x","_x2","_login","apply","arguments","login","then","onLogin","_this$state2","type","onChange","handleChange","bind","onClick","handleClick","JobList","map","renderJob","job","concat","react_router_dom","to","loadJobs","_loadJobs","resp","respBody","Content-Type","query","console","log","data","JobBoard","_componentDidMount","asyncToGenerator","mark","JobList_JobList","JobDetail","jobId","JobForm","style","height","NavBar","_this$props","loggedIn","onLogout","App","getItem","router","history","push","removeItem","ref","NavBar_NavBar","handleLogout","react_router","exact","path","component","render","LoginForm_LoginForm","handleLogin","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.12f61f16.chunk.js","sourcesContent":["// NOTE: this example keeps the access token in LocalStorage just because it's simpler\n// but in a real application you may want to use cookies instead for better security\n\nconst accessTokenKey = 'accessToken';\n\nexport function getAccessToken() {\n  return localStorage.getItem(accessTokenKey);\n}\n\nexport async function login(email, password) {\n  const response = await fetch('http://localhost:9000/login', {\n    method: 'POST',\n    headers: {'content-type': 'application/json'},\n    body: JSON.stringify({email, password})\n  });\n  if (response.ok) {\n    const {token} = await response.json();\n    localStorage.setItem(accessTokenKey, token);\n  }\n  return response.ok;\n}\n\nexport function isLoggedIn() {\n  return !!localStorage.getItem(accessTokenKey);\n}\n\nexport function logout() {\n  localStorage.removeItem(accessTokenKey);\n}\n","export const companies = [\n  {\n    id: 'company1',\n    name: 'Company AFD1',\n    description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'\n  },\n  {\n    id: 'company2',\n    name: 'Company BFD1',\n    description: 'Lorem ipsum asdfasdfasdfasdfasdfasdf asdf asd f asdf asd fasdfasdfasdfasdf dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'\n  }\n];\n\nexport const jobs = [\n  {\n    id: 'job1',\n    title: 'Job 1',\n    company: companies[0],\n    description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'\n  },\n  {\n    id: 'job2',\n    title: 'Job 2',\n    company: companies[1],\n    description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'\n  }\n];\n","import React, { Component } from 'react';\nimport { companies } from './fake-data';\n\nexport class CompanyDetail extends Component {\n  constructor(props) {\n    super(props);\n    const {companyId} = this.props.match.params;\n    this.state = {company: companies.find((company) => company.id === companyId)};\n  }\n\n  render() {\n    const {company} = this.state;\n    return (\n      <div>\n        <h1 className=\"title\">{company.name}</h1>\n        <div className=\"box\">{company.description}</div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { login } from './auth';\n\nexport class LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {email: '', password: '', error: false};\n  }\n\n  handleChange(event) {\n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    const {email, password} = this.state;\n    login(email, password).then((ok) => {\n      if (ok) {\n        this.props.onLogin();\n      } else {\n        this.setState({error: true});\n      }\n    });\n  }\n\n  render() {\n    const {email, password, error} = this.state;\n    return (\n      <form>\n        <div className=\"field\">\n          <label className=\"label\">Email</label>\n          <div className=\"control\">\n            <input className=\"input\" type=\"text\" name=\"email\" value={email}\n              onChange={this.handleChange.bind(this)} />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Password</label>\n          <div className=\"control\">\n            <input className=\"input\" type=\"password\" name=\"password\" value={password}\n              onChange={this.handleChange.bind(this)} />\n          </div>\n        </div>\n        <div className=\"field\">\n          <p className=\"help is-danger\">{error && 'Invalid credentials'}</p>\n          <div className=\"control\">\n            <button className=\"button is-link\" onClick={this.handleClick.bind(this)}>Login</button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class JobList extends Component {\n  render() {\n    const {jobs} = this.props;\n    return (\n      <ul className=\"box\">\n        {jobs.map(this.renderJob.bind(this))}\n      </ul>\n    );\n  }\n\n  renderJob(job) {\n    const title = job.company ? `${job.title} at ${job.company.name}` : job.title;\n    return (\n      <li className=\"media\" key={job.id}>\n        <div className=\"media-content\">\n          <Link to={`/jobs/${job.id}`}>{title}</Link>\n        </div>\n      </li>\n    );\n  }\n}\n","const endpointUrl = 'http:/localhost:9000/graphql';\n\nexport async function loadJobs() {\n    const resp = await fetch('graphql', {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n            query: `{\n              jobs {\n                id\n                title\n                company {\n                  id\n                  name\n                }\n              }\n            }`\n        })\n    });\n\n    console.log('-----------> resp=', resp);\n    const respBody = await resp.json();\n    // const respBody = {name: 'mike'}\n    console.log('-----------> resp body=', respBody);\n\n    return respBody.data.jobs;\n};\n","import React, { Component } from 'react';\nimport { JobList } from './JobList';\n// const { jobs } = require('./fake-data');\nimport  { loadJobs } from \"./requests\";\n\nexport class JobBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {jobs: []};\n  };\n\n  async componentDidMount() {\n    console.log('-------------> PRE');\n    const jobs = await loadJobs();\n    console.log('------------->', jobs);\n    this.setState({jobs});\n  };\n\n  render() {\n    const { jobs } = this.state;\n    return (\n      <div>\n        <h1 className=\"title\">Job Board</h1>\n        <JobList jobs={jobs} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jobs } from './fake-data';\n\nexport class JobDetail extends Component {\n  constructor(props) {\n    super(props);\n    const {jobId} = this.props.match.params;\n    this.state = {job: jobs.find((job) => job.id === jobId)};\n  }\n\n  render() {\n    const {job} = this.state;\n    return (\n      <div>\n        <h1 className=\"title\">{job.title}</h1>\n        <h2 className=\"subtitle\">\n          <Link to={`/companies/${job.company.id}`}>{job.company.name}</Link>\n        </h2>\n        <div className=\"box\">{job.description}</div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport class JobForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {title: '', description: ''};\n  }\n\n  handleChange(event) {\n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    console.log('should post a new job:', this.state);\n  }\n\n  render() {\n    const {title, description} = this.state;\n    return (\n      <div>\n        <h1 className=\"title\">New Job</h1>\n        <div className=\"box\">\n          <form>\n            <div className=\"field\">\n              <label className=\"label\">Title</label>\n              <div className=\"control\">\n                <input className=\"input\" type=\"text\" name=\"title\" value={title}\n                  onChange={this.handleChange.bind(this)} />\n              </div>\n            </div>\n            <div className=\"field\">\n              <label className=\"label\">Description</label>\n              <div className=\"control\">\n                <textarea className=\"input\" style={{height: '10em'}}\n                  name=\"description\" value={description} onChange={this.handleChange.bind(this)} />\n              </div>\n            </div>\n            <div className=\"field\">\n              <div className=\"control\">\n                <button className=\"button is-link\" onClick={this.handleClick.bind(this)}>Submit</button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class NavBar extends Component {\n  render() {\n    const { loggedIn, onLogout } = this.props;\n    if (loggedIn) {\n      return (\n        <nav className=\"navbar\">\n          <div className=\"navbar-start\">\n            <Link className=\"navbar-item\" to=\"/\">Home</Link>\n            <Link className=\"navbar-item\" to=\"/jobs/new\">Post Job</Link>\n            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n            <a className=\"navbar-item\" onClick={onLogout}>Logout</a>\n          </div>\n        </nav>\n      );\n    } else {\n      return (\n        <nav className=\"navbar\">\n          <div className=\"navbar-start\">\n            <Link className=\"navbar-item\" to=\"/\">Home</Link>\n            <Link className=\"navbar-item\" to=\"/login\">Login</Link>\n          </div>\n        </nav>\n      );\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { isLoggedIn, logout } from './auth';\nimport { CompanyDetail } from './CompanyDetail';\nimport { LoginForm } from './LoginForm';\nimport { JobBoard } from './JobBoard';\nimport { JobDetail } from './JobDetail';\nimport { JobForm } from './JobForm';\nimport { NavBar } from './NavBar';\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {loggedIn: isLoggedIn()};\n  }\n\n  handleLogin() {\n    this.setState({loggedIn: true});\n    this.router.history.push('/');\n  }\n\n  handleLogout() {\n    logout();\n    this.setState({loggedIn: false});\n    this.router.history.push('/');\n  }\n\n  render() {\n    const {loggedIn} = this.state;\n    return (\n      <Router ref={(router) => this.router = router}>\n        <div>\n          <NavBar loggedIn={loggedIn} onLogout={this.handleLogout.bind(this)} />\n          <section className=\"section\">\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={JobBoard} />\n                <Route path=\"/companies/:companyId\" component={CompanyDetail} />\n                <Route exact path=\"/jobs/new\" component={JobForm} />\n                <Route path=\"/jobs/:jobId\" component={JobDetail} />\n                <Route exact path=\"/login\" render={() => <LoginForm onLogin={this.handleLogin.bind(this)} />} />\n              </Switch>\n            </div>\n          </section>\n        </div>\n      </Router>\n    );\n  }\n}\n","import 'bulma/css/bulma.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}